$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(".burger").click(function () {
    $(".header").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})

$(".menu-item-has-children > a").click(function () {
    $(this).parent(".menu-item").toggleClass("_open")
    $(this).siblings(".sub-menu").slideToggle()
})


function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,

            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })
}

function projectSlider() {
    var swiper = new Swiper('.project-slider .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 10,
        navigation: {
            nextEl: '.project-slider .swiper-button-next',
            prevEl: '.project-slider .swiper-button-prev',
        },
        pagination: {
            el: '.project-slider .swiper-pagination',
            type: 'fraction',
            clickable: true,
        },
    })
}


Sliders()
gallery()
projectSlider()

$(".project-variants__btn").click(function () {
    $(this).parents(".project-variants").toggleClass("_show-all")
})

$('[name="payTarget"]').change(function () {
    let value = $(this).attr("data-value")
    $(".pay-target__type").removeClass("_active")
    $(`.pay-target__type.${value}`).addClass("_active")
})

$('[name="paySum"]').change(function () {
    let value = $(this).attr("data-value")
    if(value==="_other"){
        $(".pay-sum__field").slideDown()
    } else{
        $(".pay-sum__field").slideUp()
    }
})

$('[name="payWay"]').change(function () {
    let value = $(this).attr("data-value")
    if(value==="_self-pay"){
        $("._transfer-pay").hide()
        $("._self-pay").show()
    } else{
        $("._transfer-pay").show()
        $("._self-pay").hide()
    }
})

$("._search-field").each(function (i,search) {
    $(search).on("input",function () {
        checkSearchFilled()
    })

    function checkSearchFilled() {
        if($(search).val().length > 3){
            $(search).parents(".search-block").addClass("_filled")
        }else{
            $(search).parents(".search-block").removeClass("_filled")
        }
    }

    checkSearchFilled()

    $(search).siblings(".search-block__clear").click(function () {
        $(search).val("")
        checkSearchFilled()
    })
})

$(".filter-item").each(function (i,filter) {
    let toggleBtn = $(filter).find(".filter-item__show")
    let output = $(filter).find(".filter-item__current")
    let options = $(filter).find(".filter-option input")

    setSelectVariant()

    $(options).change(function () {
        setSelectVariant()
    })

    function setSelectVariant() {
        if($(filter).hasClass("_multi-select")){
            let checkedOptions = $(filter)
                .find(".filter-option input:checked")
            let unCheckedOption = $(filter)
                .find(".filter-option input:not(:checked)")
            if(unCheckedOption.length === 0 || checkedOptions.length === 0){
                $(output).html($(output).attr("data-placeholder"))
            } else{
                $(output).html(checkedOptions.attr("data-value"))
            }
            return
        }

        let checkedOption = $(filter)
            .find(".filter-option input:checked")
            .attr("data-value")
        $(output).html(checkedOption)
        $(filter).removeClass("_open")
    }

    $(toggleBtn).click(function () {
        if($(filter).hasClass("_open")){
            $(".filter-item").removeClass("_open")
        }else{
            $(".filter-item").removeClass("_open")
            $(filter).addClass("_open")
        }
    })

    $(document).mouseup( function(e){
        let div = $(filter);
        if ( !div.is(e.target)
            && div.has(e.target).length === 0 ) {
            if($(div).hasClass("_open")){
                $(div).removeClass("_open")
            }
        }
    });
})

$(".finance-item__show").click(function () {
    $(".finance-item").removeClass("_active")
    $(this).parents(".finance-item").addClass("_active")

    if(window.innerWidth<=992){
        $(this).parents(".finance-item").toggleClass("_active2")
        $(this).siblings(".finance-item__hidden").slideToggle()
    }
})

let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

    $('input[type="tel"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });
    $('._bank-card').mask('9999 9999 9999 9999', { autoclear: false }, { placeholder: '                   ' });
    $('._bank-card-date').mask('99/99', { autoclear: false }, { placeholder: '  /  ' });
    $('._bank-card-cvv').mask('999', { autoclear: false }, { placeholder: '   ' });
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
